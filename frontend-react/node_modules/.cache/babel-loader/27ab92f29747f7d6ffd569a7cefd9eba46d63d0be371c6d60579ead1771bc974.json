{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SIDDESH VICHARE\\\\Downloads\\\\Django development\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport axios from 'axios';\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PostList = () => {\n  _s();\n  const [posts, setPosts] = useState([]); // Initial state is an empty array\n\n  useEffect(() => {\n    axios.get('http://localhost:8000/api/posts/').then(response => {\n      console.log(response.data); // Log the response data\n      setPosts(response.data); // Ensure this is an array\n    }).catch(error => {\n      console.error('There was an error fetching the posts!', error);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Post List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: Array.isArray(posts) && posts.map(post =>\n      /*#__PURE__*/\n      // Ensure posts is an array before mapping\n      _jsxDEV(\"li\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 10\n      }, this)\n      // <li>{post.title}</li>\n      //       <li>{post.content}</li>\n      )\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n};\n_s(PostList, \"bG8V4duoIfO0BEPgauWMVT5Qvyw=\");\n_c = PostList;\nexport default PostList;\nvar _c;\n$RefreshReg$(_c, \"PostList\");","map":{"version":3,"names":["axios","React","useEffect","useState","jsxDEV","_jsxDEV","PostList","_s","posts","setPosts","get","then","response","console","log","data","catch","error","children","fileName","_jsxFileName","lineNumber","columnNumber","Array","isArray","map","post","_c","$RefreshReg$"],"sources":["C:/Users/SIDDESH VICHARE/Downloads/Django development/frontend/src/App.js"],"sourcesContent":["import axios from 'axios';\nimport React, { useEffect, useState } from 'react';\n\nconst PostList = () => {\n  const [posts, setPosts] = useState([]);  // Initial state is an empty array\n\n  useEffect(() => {\n    axios.get('http://localhost:8000/api/posts/')\n      .then(response => {\n        console.log(response.data);  // Log the response data\n        setPosts(response.data);  // Ensure this is an array\n      })\n      .catch(error => {\n        console.error('There was an error fetching the posts!', error);\n      });\n  }, []);\n\n  return (\n    <div>\n      <h1>Post List</h1>\n      <ul>\n        {Array.isArray(posts) && posts.map(post => (  // Ensure posts is an array before mapping\n         <li>\n          \n         </li>\n    // <li>{post.title}</li>\n    //       <li>{post.content}</li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default PostList;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAE;;EAEzCD,SAAS,CAAC,MAAM;IACdF,KAAK,CAACU,GAAG,CAAC,kCAAkC,CAAC,CAC1CC,IAAI,CAACC,QAAQ,IAAI;MAChBC,OAAO,CAACC,GAAG,CAACF,QAAQ,CAACG,IAAI,CAAC,CAAC,CAAE;MAC7BN,QAAQ,CAACG,QAAQ,CAACG,IAAI,CAAC,CAAC,CAAE;IAC5B,CAAC,CAAC,CACDC,KAAK,CAACC,KAAK,IAAI;MACdJ,OAAO,CAACI,KAAK,CAAC,wCAAwC,EAAEA,KAAK,CAAC;IAChE,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEZ,OAAA;IAAAa,QAAA,gBACEb,OAAA;MAAAa,QAAA,EAAI;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAClBjB,OAAA;MAAAa,QAAA,EACGK,KAAK,CAACC,OAAO,CAAChB,KAAK,CAAC,IAAIA,KAAK,CAACiB,GAAG,CAACC,IAAI;MAAA;MAAO;MAC7CrB,OAAA;QAAAc,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEI;MACT;MACA;MACK;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV,CAAC;AAACf,EAAA,CA5BID,QAAQ;AAAAqB,EAAA,GAARrB,QAAQ;AA8Bd,eAAeA,QAAQ;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}