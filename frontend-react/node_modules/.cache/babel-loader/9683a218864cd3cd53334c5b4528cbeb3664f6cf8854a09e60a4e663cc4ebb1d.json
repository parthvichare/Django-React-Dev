{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SIDDESH VICHARE\\\\Downloads\\\\Django development\\\\frontend-react\\\\src\\\\Pricefilter.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Category = () => {\n  _s();\n  const [posts, setPosts] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    // Function to fetch posts based on price_filter\n    const fetchPosts = async () => {\n      try {\n        // Replace 'http://127.0.0.1:8000/home' with your actual backend endpoint\n        const response = await axios.get('http://127.0.0.1:8000/home', {\n          params: {\n            price_filter: 'lac' // Hardcoded example, replace with dynamic value if needed\n          }\n        });\n        setPosts(response.data.filter); // Assuming your JSON response has a 'filter' key containing filtered posts\n        setLoading(false);\n      } catch (error) {\n        setError(error);\n        setLoading(false);\n      }\n    };\n    fetchPosts(); // Call the fetchPosts function\n  }, []); // Empty dependency array means it runs once on component mount\n\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"Error: \", error.message]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: posts.map(post => /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: post.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: post.Image_url,\n        alt: post.name,\n        className: \"image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: post.price\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: post.beds\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: post.super_areas\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: post.furnishing\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this)]\n    }, post.property_id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n_s(Category, \"FFSFm1bVdM1s2gLh8ffGbsIvlRY=\");\n_c = Category;\nexport default Category;\nvar _c;\n$RefreshReg$(_c, \"Category\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","Category","_s","posts","setPosts","loading","setLoading","error","setError","fetchPosts","response","get","params","price_filter","data","filter","children","fileName","_jsxFileName","lineNumber","columnNumber","message","map","post","name","src","Image_url","alt","className","price","beds","super_areas","furnishing","property_id","_c","$RefreshReg$"],"sources":["C:/Users/SIDDESH VICHARE/Downloads/Django development/frontend-react/src/Pricefilter.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport './App.css'\r\n\r\nconst Category = () => {\r\n  const [posts, setPosts] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // Function to fetch posts based on price_filter\r\n    const fetchPosts = async () => {\r\n      try {\r\n        // Replace 'http://127.0.0.1:8000/home' with your actual backend endpoint\r\n        const response = await axios.get('http://127.0.0.1:8000/home', {\r\n          params: {\r\n            price_filter: 'lac'  // Hardcoded example, replace with dynamic value if needed\r\n          }\r\n        });\r\n        setPosts(response.data.filter);  // Assuming your JSON response has a 'filter' key containing filtered posts\r\n        setLoading(false);\r\n      } catch (error) {\r\n        setError(error);\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchPosts();  // Call the fetchPosts function\r\n  }, []);  // Empty dependency array means it runs once on component mount\r\n\r\n  if (loading) return <div>Loading...</div>;\r\n  if (error) return <div>Error: {error.message}</div>;\r\n\r\n  return (\r\n    <div>\r\n      {posts.map(post => (\r\n        <ul key={post.property_id}>\r\n          <h3>{post.name}</h3>\r\n          <img src={post.Image_url} alt={post.name} className='image'/>\r\n          <h4>{post.price}</h4>\r\n          <h4>{post.beds}</h4>\r\n          <h4>{post.super_areas}</h4>\r\n          <h4>{post.furnishing}</h4>\r\n        </ul>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Category;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}